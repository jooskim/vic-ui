eyJhbGciOiJIUzI1NiJ9.IyBBZnRlciBhbnkgY2hhbmdlIHRvIHRoaXMgZmlsZSB5b3UgTVVTVCByZS1zaWduIGFuZCBjaGVja2luIHRoZSAuZHJvbmUueW1sLnNpZwojIFdoZW4geW91IGFyZSByZWFkeSB0byBzdWJtaXQgYSBwdWxsIHJlcXVlc3QsIHlvdSBtdXN0IHJlZ2VuZXJhdGUgLmRyb25lLnltbC5zaWcgZm9yIHRoZSB2bXdhcmUvdmljIHJlcG86CiMgJCBleHBvcnQgRFJPTkVfU0VSVkVSPWh0dHBzOi8vY2kudmNuYS5pbwojICQgZXhwb3J0IERST05FX1RPS0VOPTx0b2tlbj4KIyAkIGRyb25lIHNpZ24gdm13YXJlL3ZpYy11aQojIFRoZSBzZWNyZXRzIGZpbGUgaXMgaW4gb3VyIGxvY2FsIGdpdCByZXBvLiAgQXNrIG1oYWdlbiBmb3IgYWNjZXNzLgoKLS0tCndvcmtzcGFjZToKICBiYXNlOiAvZ28KICBwYXRoOiBzcmMvZ2l0aHViLmNvbS92bXdhcmUvdmljLXVpCgpwaXBlbGluZToKICBjbG9uZToKICAgIGltYWdlOiBwbHVnaW5zL2dpdAogICAgdGFnczogdHJ1ZQogICAgIyBkb250IGNsb25lIHN1Ym1vZHVsZXMKICAgIHJlY3Vyc2l2ZTogZmFsc2UKCiAgdmljLXVpOgogICAgaW1hZ2U6IGdjci5pby9lbWluZW50LW5hdGlvbi04NzMxNy92aWMtaW50ZWdyYXRpb24tdGVzdDoxLjM2CiAgICBwdWxsOiB0cnVlCiAgICBlbnZpcm9ubWVudDoKICAgICAgQlVJTERfTlVNQkVSOiAke0RST05FX0JVSUxEX05VTUJFUn0KICAgICAgQklOOiBiaW4KICAgICAgR1NfUFJPSkVDVF9JRDogJHtHU19QUk9KRUNUX0lEfQogICAgICBHU19DTElFTlRfRU1BSUw6ICR7R1NfQ0xJRU5UX0VNQUlMfQogICAgICBHU19QUklWQVRFX0tFWTogJHtHU19QUklWQVRFX0tFWX0KICAgIGNvbW1hbmRzOgogICAgICAtIG1ha2UgdmljLXVpLXBsdWdpbnMKCiAgZTJlOgogICAgaW1hZ2U6IGdjci5pby9lbWluZW50LW5hdGlvbi04NzMxNy92aWMtaW50ZWdyYXRpb24tdGVzdDoxLjM2CiAgICBwdWxsOiB0cnVlCiAgICBlbnZpcm9ubWVudDoKICAgICAgQlVJTERfTlVNQkVSOiAke0RST05FX0JVSUxEX05VTUJFUn0KICAgICAgQ09NTUlUX1VSTDogJHtEUk9ORV9DT01NSVRfTElOS30KICAgICAgUExVR0lOX1BBQ0tBR0VTX0ZPTERFUjogc2NyaXB0cy9wbHVnaW4tcGFja2FnZXMKICAgICAgU0VMRU5JVU1fRU5EUE9JTlQ6IHRpbmEuZW5nLnZtd2FyZS5jb206NDQ0NAogICAgICBTQ1JBVENIX0ZPTERFUjogL3RtcC9wbHVnaW4tcGtnLXNjcmF0Y2gKICAgIGNvbW1hbmRzOgogICAgICAtIGV4cG9ydCBUQUdfTlVNPSQoZ2l0IGRlc2NyaWJlIC0tdGFncyAkKGdpdCByZXYtbGlzdCAtLXRhZ3MgLS1tYXgtY291bnQ9MSkgfCBjdXQgLWMgMi0gfCBzZWQgLWUgJ3MvXCgtcmNbWzpkaWdpdDpdXVwpLy8nIC1lICdzL1woLWRldlwpJC8vJykKICAgICAgLSBlY2hvIFRBR19OVU0gaXMgJHtUQUdfTlVNfQogICAgICAtIGxzIC1sYSAke1BMVUdJTl9QQUNLQUdFU19GT0xERVJ9LwogICAgICAtIG1rZGlyIC1wICR7U0NSQVRDSF9GT0xERVJ9L2g1YwogICAgICAtIGNkICR7UExVR0lOX1BBQ0tBR0VTX0ZPTERFUn0vY29tLnZtd2FyZS52aWMtdiR7VEFHX05VTX0uJHtEUk9ORV9CVUlMRF9OVU1CRVJ9CiAgICAgIC0gc2VkICJzL0g1IENsaWVudCBQbHVnaW4gZm9yIHZTcGhlcmUgSW50ZWdyYXRlZCBDb250YWluZXJzIEVuZ2luZS92U3BoZXJlIENsaWVudCBQbHVnaW4gZm9yIHZTcGhlcmUgSW50ZWdyYXRlZCBDb250YWluZXJzIEVuZ2luZSBcKHYke1ZJQ19FTkdJTkVfVkVSX1NUUklOR31cKS8iIHBsdWdpbi1wYWNrYWdlLnhtbCA-ICR7U0NSQVRDSF9GT0xERVJ9L2g1Yy9wbHVnaW4tcGFja2FnZS54bWwKICAgICAgIy0gY3AgLXYgJHtTQ1JBVENIX0ZPTERFUn0vaDVjL3BsdWdpbi1wYWNrYWdlLnhtbCAuLwogICAgICAjLSB6aXAgLTkgLXIgJHtTQ1JBVENIX0ZPTERFUn0vaDVjL2NvbS52bXdhcmUudmljLSR7VklDX1VJX1ZFUl9TVFJJTkd9LnppcCAuLyoKICAgICAgIy0gY3AgLXYgJHtTQ1JBVENIX0ZPTERFUn0vaDVjL2NvbS52bXdhcmUudmljLSR7VklDX1VJX1ZFUl9TVFJJTkd9LnppcCAuLi8KICAgICAgIy0gY2QgJHtDVVJSRU5UX1dPUktJTkdfRElSfQogICAgd2hlbjoKICAgICAgc3RhdHVzOiBzdWNjZXNzCgogIGJ1bmRsZToKICAgIGltYWdlOiBnY3IuaW8vZW1pbmVudC1uYXRpb24tODczMTcvdmljLWludGVncmF0aW9uLXRlc3Q6MS4zNgogICAgcHVsbDogdHJ1ZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIEJJTjogYmluCiAgICAgIEdPUEFUSDogL2dvCiAgICAgIFNIRUxMOiAvYmluL2Jhc2gKICAgIGNvbW1hbmRzOgogICAgICAtIG1rZGlyIC1wICRCSU4vdWkKICAgICAgLSB0YXIgLWN6dmYgJEJJTi92aWNfdWlfJHtEUk9ORV9CVUlMRF9OVU1CRVJ9LnRhci5neiAkQklOL3VpCiAgICAgIC0gbWtkaXIgYnVuZGxlCiAgICAgIC0gbWtkaXIgYnVuZGxlLXJlbGVhc2UKICAgICAgLSBjcCAkQklOL3ZpY191aV8ke0RST05FX0JVSUxEX05VTUJFUn0udGFyLmd6IGJ1bmRsZQogICAgICAtIGNwICRCSU4vdmljX3VpXyR7RFJPTkVfQlVJTERfTlVNQkVSfS50YXIuZ3ogYnVuZGxlLXJlbGVhc2UvdmljX3VpX2BnaXQgZGVzY3JpYmUgLS10YWdzICQoZ2l0IHJldi1saXN0IC0tdGFncyAtLW1heC1jb3VudD0xKWAudGFyLmd6CiAgICAgIC0gcm0gLXJmICRCSU4KICAgICAgLSBscyAtbGEgYnVuZGxlCiAgICB3aGVuOgogICAgICByZXBvOiB2bXdhcmUvdmljLXVpCiAgICAgIGV2ZW50OiBbIHB1c2gsIHRhZyBdCiAgICAgIGJyYW5jaDogWyBtYXN0ZXIsIHJlbGVhc2VzLyosIHJlZnMvdGFncy8qIF0KCiAgcHVibGlzaC1nY3MtYnVpbGRzLW9uLXBhc3M6CiAgICBpbWFnZTogbWFwbGFpbi9kcm9uZS1nY3M6bGF0ZXN0CiAgICBwdWxsOiB0cnVlCiAgICBzb3VyY2U6IGJ1bmRsZQogICAgdGFyZ2V0OiB2aWMtdWktYnVpbGRzCiAgICBhY2w6CiAgICAgIC0gYWxsVXNlcnM6UkVBREVSCiAgICBjYWNoZV9jb250cm9sOiBwdWJsaWMsbWF4LWFnZT0zNjAwCiAgICB3aGVuOgogICAgICByZXBvOiB2bXdhcmUvdmljLXVpCiAgICAgIGV2ZW50OiBbIHB1c2ggXQogICAgICBicmFuY2g6IFsgbWFzdGVyLCByZWxlYXNlcy8qIF0KICAgICAgc3RhdHVzOiBzdWNjZXNzCgogIHB1Ymxpc2gtZ2NzLXJlbGVhc2VzOgogICAgaW1hZ2U6IG1hcGxhaW4vZHJvbmUtZ2NzOmxhdGVzdAogICAgcHVsbDogdHJ1ZQogICAgc291cmNlOiBidW5kbGUtcmVsZWFzZQogICAgdGFyZ2V0OiB2aWMtdWktcmVsZWFzZXMKICAgIGFjbDoKICAgICAgLSBhbGxVc2VyczpSRUFERVIKICAgIGNhY2hlX2NvbnRyb2w6IHB1YmxpYyxtYXgtYWdlPTM2MDAKICAgIHdoZW46CiAgICAgIHJlcG86IHZtd2FyZS92aWMtdWkKICAgICAgZXZlbnQ6IFsgcHVzaCwgdGFnIF0KICAgICAgYnJhbmNoOiBbIHJlZnMvdGFncy8qIF0KICAgICAgc3RhdHVzOiBzdWNjZXNzCgpzZXJ2aWNlczoKICBzZWxlbml1bToKICAgIGltYWdlOiBzZWxlbml1bS9zdGFuZGFsb25lLWZpcmVmb3gK.ETlH1xQp8fEmnjqA9ZF5peQ_rwvsd5XOfKlGnXbV5lM