eyJhbGciOiJIUzI1NiJ9.IyBBZnRlciBhbnkgY2hhbmdlIHRvIHRoaXMgZmlsZSB5b3UgTVVTVCByZS1zaWduIGFuZCBjaGVja2luIHRoZSAuZHJvbmUueW1sLnNpZwojIFdoZW4geW91IGFyZSByZWFkeSB0byBzdWJtaXQgYSBwdWxsIHJlcXVlc3QsIHlvdSBtdXN0IHJlZ2VuZXJhdGUgLmRyb25lLnltbC5zaWcgZm9yIHRoZSB2bXdhcmUvdmljIHJlcG86CiMgJCBleHBvcnQgRFJPTkVfU0VSVkVSPWh0dHBzOi8vY2kudmNuYS5pbwojICQgZXhwb3J0IERST05FX1RPS0VOPTx0b2tlbj4KIyAkIGRyb25lIHNpZ24gdm13YXJlL3ZpYy11aQojIFRoZSBzZWNyZXRzIGZpbGUgaXMgaW4gb3VyIGxvY2FsIGdpdCByZXBvLiAgQXNrIG1oYWdlbiBmb3IgYWNjZXNzLgoKLS0tCndvcmtzcGFjZToKICBiYXNlOiAvZ28KICBwYXRoOiBzcmMvZ2l0aHViLmNvbS92bXdhcmUvdmljLXVpCgpwaXBlbGluZToKICBjbG9uZToKICAgIGltYWdlOiBwbHVnaW5zL2dpdAogICAgdGFnczogdHJ1ZQogICAgcmVjdXJzaXZlOiBmYWxzZQoKICBjbG9uZS1wcjoKICAgIGltYWdlOiBnY3IuaW8vZW1pbmVudC1uYXRpb24tODczMTcvZ2l0LWNsb25lOjEuMQogICAgcHVsbDogdHJ1ZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIERST05FX1BVTExfUkVRVUVTVDogJHtEUk9ORV9QVUxMX1JFUVVFU1R9CiAgICB3aGVuOgogICAgICBldmVudDogWyBwdWxsX3JlcXVlc3QgXQoKICB2aWMtYXBwbGlhbmNlLXVpOgogICAgaW1hZ2U6IGdjci5pby9lbWluZW50LW5hdGlvbi04NzMxNy92aWMtaW50ZWdyYXRpb24tdGVzdDoxLjM5CiAgICBwdWxsOiB0cnVlCiAgICBlbnZpcm9ubWVudDoKICAgICAgQlVJTERfTlVNQkVSOiAke0RST05FX0JVSUxEX05VTUJFUn0KICAgICAgR1NfUFJPSkVDVF9JRDogJHtHU19QUk9KRUNUX0lEfQogICAgICBHU19DTElFTlRfRU1BSUw6ICR7R1NfQ0xJRU5UX0VNQUlMfQogICAgICBHU19QUklWQVRFX0tFWTogJHtHU19QUklWQVRFX0tFWX0KICAgIGNvbW1hbmRzOgogICAgICAtIG1ha2UgdmljLWFwcGxpYW5jZS11aQoKICBwdWJsaXNoLXZpYy1hcHBsaWFuY2UtdWk6CiAgICBpbWFnZTogcGx1Z2lucy9nY3IKICAgIHJlcG86IGVtaW5lbnQtbmF0aW9uLTg3MzE3L3ZpYy1hcHBsaWFuY2UtdWkKICAgIGRvY2tlcmZpbGU6IGFwcGxpYW5jZS11aS9Eb2NrZXJmaWxlCiAgICB0YWdzOgogICAgICAtIGRldgogICAganNvbl9rZXk6ID4KICAgICAgewogICAgICAgICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgICAgICAgInByb2plY3RfaWQiOiAiJHtHU19QUk9KRUNUX0lEfSIsCiAgICAgICAgInByaXZhdGVfa2V5X2lkIjogIiR7R1NfUFJJVkFURV9LRVlfSUR9IiwKICAgICAgICAicHJpdmF0ZV9rZXkiOiAiJHtHU19QUklWQVRFX0tFWX0iLAogICAgICAgICJjbGllbnRfZW1haWwiOiAiJHtHU19DTElFTlRfRU1BSUx9IiwKICAgICAgICAiY2xpZW50X2lkIjogIiR7R1NfUFJPSkVDVF9JRH0iLAogICAgICAgICJhdXRoX3VyaSI6ICJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvYXV0aCIsCiAgICAgICAgInRva2VuX3VyaSI6ICJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdG9rZW4iLAogICAgICAgICJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vb2F1dGgyL3YxL2NlcnRzIiwKICAgICAgICAiY2xpZW50X3g1MDlfY2VydF91cmwiOiAiIgogICAgICB9CgogICAgd2hlbjoKICAgICAgcmVwbzogdm13YXJlL3ZpYy11aQogICAgICBldmVudDogWyBwdXNoLCBwdWxsX3JlcXVlc3QsIHRhZywgZGVwbG95bWVudCBdLAogICAgICBicmFuY2g6IFsgbWFzdGVyLCBhcHBsaWFuY2UtdWkqIF0sCiAgICAgIHN0YXR1czogc3VjY2VzcwoKICB2aWMtdWk6CiAgICBpbWFnZTogZ2NyLmlvL2VtaW5lbnQtbmF0aW9uLTg3MzE3L3ZpYy1pbnRlZ3JhdGlvbi10ZXN0OjEuMzYKICAgIHB1bGw6IHRydWUKICAgIGVudmlyb25tZW50OgogICAgICBCVUlMRF9OVU1CRVI6ICR7RFJPTkVfQlVJTERfTlVNQkVSfQogICAgICBCSU46IGJpbgogICAgICBHU19QUk9KRUNUX0lEOiAke0dTX1BST0pFQ1RfSUR9CiAgICAgIEdTX0NMSUVOVF9FTUFJTDogJHtHU19DTElFTlRfRU1BSUx9CiAgICAgIEdTX1BSSVZBVEVfS0VZOiAke0dTX1BSSVZBVEVfS0VZfQogICAgY29tbWFuZHM6CiAgICAgIC0gbWFrZSB2aWMtdWktcGx1Z2lucwogICAgd2hlbjoKICAgICAgcmVwbzogdm13YXJlL3ZpYy11aQogICAgICBicmFuY2g6IFsgbWFzdGVyLCByZWxlYXNlcy8qLCByZWZzL3RhZ3MvKiBdCgogIGJ1bmRsZToKICAgIGltYWdlOiBnY3IuaW8vZW1pbmVudC1uYXRpb24tODczMTcvdmljLWludGVncmF0aW9uLXRlc3Q6MS4zNgogICAgcHVsbDogdHJ1ZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIEJJTjogYmluCiAgICAgIEdPUEFUSDogL2dvCiAgICAgIFNIRUxMOiAvYmluL2Jhc2gKICAgIGNvbW1hbmRzOgogICAgICAtIG1rZGlyIC1wICRCSU4vdWkKICAgICAgLSB0YXIgLWN6dmYgJEJJTi92aWNfdWlfJHtEUk9ORV9CVUlMRF9OVU1CRVJ9LnRhci5neiAkQklOL3VpCiAgICAgIC0gbWtkaXIgYnVuZGxlCiAgICAgIC0gbWtkaXIgYnVuZGxlLXJlbGVhc2UKICAgICAgLSBjcCAkQklOL3ZpY191aV8ke0RST05FX0JVSUxEX05VTUJFUn0udGFyLmd6IGJ1bmRsZQogICAgICAtIGNwICRCSU4vdmljX3VpXyR7RFJPTkVfQlVJTERfTlVNQkVSfS50YXIuZ3ogYnVuZGxlLXJlbGVhc2UvdmljX3VpX2BnaXQgZGVzY3JpYmUgLS10YWdzICQoZ2l0IHJldi1saXN0IC0tdGFncyAtLW1heC1jb3VudD0xKWAudGFyLmd6CiAgICAgIC0gcm0gLXJmICRCSU4KICAgICAgLSBscyAtbGEgYnVuZGxlCiAgICB3aGVuOgogICAgICByZXBvOiB2bXdhcmUvdmljLXVpCiAgICAgIGV2ZW50OiBbIHB1c2gsIHRhZyBdCiAgICAgIGJyYW5jaDogWyBtYXN0ZXIsIHJlbGVhc2VzLyosIHJlZnMvdGFncy8qIF0KCiAgcHVibGlzaC1nY3MtYnVpbGRzLW9uLXBhc3M6CiAgICBpbWFnZTogbWFwbGFpbi9kcm9uZS1nY3M6bGF0ZXN0CiAgICBwdWxsOiB0cnVlCiAgICBzb3VyY2U6IGJ1bmRsZQogICAgdGFyZ2V0OiB2aWMtdWktYnVpbGRzCiAgICBhY2w6CiAgICAgIC0gYWxsVXNlcnM6UkVBREVSCiAgICBjYWNoZV9jb250cm9sOiBwdWJsaWMsbWF4LWFnZT0zNjAwCiAgICB3aGVuOgogICAgICByZXBvOiB2bXdhcmUvdmljLXVpCiAgICAgIGV2ZW50OiBbIHB1c2ggXQogICAgICBicmFuY2g6IFsgbWFzdGVyLCByZWxlYXNlcy8qIF0KICAgICAgc3RhdHVzOiBzdWNjZXNzCgogIHB1Ymxpc2gtZ2NzLXJlbGVhc2VzOgogICAgaW1hZ2U6IG1hcGxhaW4vZHJvbmUtZ2NzOmxhdGVzdAogICAgcHVsbDogdHJ1ZQogICAgc291cmNlOiBidW5kbGUtcmVsZWFzZQogICAgdGFyZ2V0OiB2aWMtdWktcmVsZWFzZXMKICAgIGFjbDoKICAgICAgLSBhbGxVc2VyczpSRUFERVIKICAgIGNhY2hlX2NvbnRyb2w6IHB1YmxpYyxtYXgtYWdlPTM2MDAKICAgIHdoZW46CiAgICAgIHJlcG86IHZtd2FyZS92aWMtdWkKICAgICAgZXZlbnQ6IFsgcHVzaCwgdGFnIF0KICAgICAgYnJhbmNoOiBbIHJlZnMvdGFncy8qIF0KICAgICAgc3RhdHVzOiBzdWNjZXNzCgpzZXJ2aWNlczoKICBzZWxlbml1bToKICAgIGltYWdlOiBzZWxlbml1bS9zdGFuZGFsb25lLWZpcmVmb3gKCg.ykVmXVJKjaSU_v0ngMxsSOiiiSa5LeaaTlUEOk9E5Us